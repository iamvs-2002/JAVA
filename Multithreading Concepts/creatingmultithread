/*
There are two different ways to create a thread:
1. Creating a class that extends the java.lang.Thread Class
2. Creating a class that implements java.lang.Runnable interface

*/

class Test{
  public static void main(String[] args){
    A a = new A();//creating a thread object
    a.start();//starts the execution of the thread
    B b = new B();//create an object
    Thread t = new Thread(b);//create a Thread Class object
    t.start();//starts the execution of the thread
  }
}


/*
NOTE:
Whenever we call a.start() method, JVM searches for the start() method in A class, but the a.start() method is not available in the A class.
So JVM goes to parent class,i.e., Thread class and searches for the start() method there.
In the Thread class, start() method is available, hence JVM executes start() method.
Now, this start() method is responsible to call the run() method.
Finally, the run() method is automatically executed whenever we call start() method.

A new thread only gets created when the Thread class start() method is called.

*/


class A extends Thread{
  public void run(){
    //statements
    System.out.println("Thread - a");
  }
}

class B implements Runnable{
  public void run(){
    //statements
    System.out.println("Thread - b");
  }
}
